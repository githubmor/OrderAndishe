//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace BL
{
	using System;
    using System.Data.Entity;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;
    using OrdersAndisheh.DBL;
    using OrdersAndisheh.BL;
using System.Collections.ObjectModel;


    /// <summary>
    /// This is Just For Service Sefaresh To Database
    /// </summary>
	public class SefareshService : ISefareshService 
	{
        //public virtual Sefaresh Sefareshs
        //{
        //    get;
        //    set;
        //}

		public void SaveSefaresh(Sefaresh sefaresh)
		{
            if (sefaresh.Order != null)
            {
                using (MyContextCF db = new MyContextCF())
                {
                    db.Orders.Add(sefaresh.Order);
                    foreach (var item in sefaresh.Order.OrderDetails)
                    {
                        if (item.Customer != null)
                        {
                            db.Customers.Attach(item.Customer);
                        }
                        if (item.Driver != null)
                        {
                            db.Drivers.Attach(item.Driver);
                        }
                       
                        db.OrderDetails.Add(item);
                    }
                    db.SaveChanges();
                }
            }
		}

        public void UpdateSefaresh(Sefaresh sefaresh)
		{
            using (MyContextCF db = new MyContextCF())
            {
                //Order d = db.Orders.Where(p => p.Id == sefaresh.SefareshId).FirstOrDefault();
                db.Orders.Remove(db.Orders.Where(p => p.Id == sefaresh.SefareshId).FirstOrDefault());
                db.Orders.Add(sefaresh.Order);
                db.SaveChanges();
            }
            //throw new ApplicationException("این قسمت هنوز پیاده سازی نشده");

            ////TODO  اینجا باید اول آیتم های اضافه شده رو از آیتم های قبلا ثبت شده جدا کنیم
            ////بعد آیتم های جدید رو بزاریم برای ثبت
            ////آیتم های قبلا ثبت شده رو بزاریم برای ویرایش
            ////آخر سر هم خود سفارش رو ویرایش کنیم اگر تغییر دادند

            ////if (sefaresh.Order != null)
            ////{
            ////    using (MyContextCF db = new MyContextCF())
            ////    {
            ////        db.Orders.Attach(sefaresh.Order);
            ////        db.SaveChanges();
            ////    }
            ////}
		}

        public virtual void AcceptSefaresh(Sefaresh sefaresh)
		{
            if (sefaresh.Items==null)
            {
                throw new ApplicationException("آیتم ها سفارش نهای میباشد");
            }
            foreach (var item in sefaresh.Items)
            {
                if (item.Maghsad==""|item.Ranande==""|item.Tedad>0)
                {
                    throw new ApplicationException("اطلاعات مناسب وارد نشده");
                }
            }
            sefaresh.Accepted = true;
            this.UpdateSefaresh(sefaresh);
		}

        public virtual void UnAcceptSefaresh(Sefaresh sefaresh)
		{
            if (sefaresh.Items == null)
            {
                throw new ApplicationException("");
            }
            sefaresh.Accepted = false;
            this.UpdateSefaresh(sefaresh);
		}

       

        public Sefaresh LoadSefaresh(string tarikh)
        {
            if (string.IsNullOrEmpty(tarikh))
            {
                throw new ApplicationException("تاریخ به صورت صحیح وارد نشده");
            }
            using (MyContextCF db = new MyContextCF())
            {
                
                Order t = db.Orders.Where(p => p.Tarikh == tarikh)
                            .Include("OrderDetails")
                            .Include("OrderDetails.Customer")
                            .Include("OrderDetails.Driver")
                            .Include("OrderDetails.Product")
                            .Include("OrderDetails.Product.Pallet")
                            .Include("OrderDetails.Product.Bazre")
                            .OrderBy(p=>p.Id)
                            .FirstOrDefault();

                if (t==null)
                {
                    throw new ApplicationException("اطلاعات سفارش وجود ندارد");
                }
                return new Sefaresh(t, t.OrderDetails.ToList());
               
            }
        }

        public List<Driver> LoadDrivers()
        {
            using (MyContextCF db = new MyContextCF())
            {
                return db.Drivers.ToList();
            }
        }

        public List<Product> LoadGoods()
        {
            using (MyContextCF db = new MyContextCF())
            {
                return db.Products.Include("Pallet").ToList();
            }
        }

        public List<Customer> LoadDestinations()
        {
            using (MyContextCF db = new MyContextCF())
            {
                return db.Customers.ToList();
            }
        }
    }
}

